services:
  full_db:
    image: postgres:16
    container_name: postgres_container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: book_review
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5434:5432"
    volumes:
      - full_postgres_data:/var/lib/postgresql/data

  full_redis:
    image: redis:7-alpine
    container_name: full_redis_container
    ports:
      - "6380:6379"
    restart: unless-stopped
    volumes:
      - full_redis_data:/data

  full_backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: full_backend_container
    environment:
      DATABASE_URL: postgres://postgres:postgres@full_db:5432/book_review
      USE_CACHE: "true"
      REDIS_HOST: "full_redis"
      REDIS_PORT: "6379"
      USE_REVERSE_PROXY: "true"
      AUTHOR_PHOTOS_UPLOAD_PATH: "authors/"
      BOOK_COVERS_UPLOAD_PATH: "books/"
    depends_on:
      full_db:
        condition: service_healthy
      full_redis:
        condition: service_started
    ports:
      - "8001:8000"
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--deploy"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    volumes:
      - .:/app
      - full_static_data:/app/static
      - full_media_data:/app/media

  full_nginx:
    image: nginx:latest
    container_name: full_nginx_container
    ports:
      - "80:80"
    volumes:
      - ./nginx/full.conf/default.conf:/etc/nginx/conf.d/default.conf:ro
      - full_static_data:/app/static
      - full_media_data:/app/media
    depends_on:
      full_backend:
        condition: service_healthy

volumes:
  full_postgres_data:
  full_redis_data:
  full_static_data:
  full_media_data:
